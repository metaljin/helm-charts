{{- if .Values.ingress.enabled }}
kind: Ingress
{{- if $.Capabilities.APIVersions.Has "networking.k8s.io/v1beta1" }}
apiVersion: networking.k8s.io/v1beta1
{{- else }}
apiVersion: extensions/v1beta1
{{- end }}

metadata:
  name: grafana
  annotations:
    kubernetes.io/tls-acme: {{ default false .Values.grafana.tls | quote }}
    disco: {{ default false .Values.grafana.disco | quote }}
  {{- if .Values.grafana.auth.tls_client_auth.enabled}}
    ingress.kubernetes.io/auth-tls-secret: {{ default "" .Values.grafana.auth.tls_client_auth.secret }}
    ingress.kubernetes.io/auth-tls-verify-depth: "3"
    ingress.kubernetes.io/auth-tls-verify-client: "optional"
  {{- end }}

spec:
  tls:
    - secretName: "tls-{{.Values.grafana.endpoint.host.public | replace "." "-"}}"
      hosts: ["{{.Values.grafana.endpoint.host.public}}"]
  rules:
    - host: "{{.Values.grafana.endpoint.host.public}}"
      http:
        paths:
        - path: /
          backend:
            serviceName: grafana
            servicePort: {{.Values.grafana.endpoint.port.public}}
{{- if .Values.ingress.global }}
--- 
kind: Ingress
{{- if $.Capabilities.APIVersions.Has "networking.k8s.io/v1beta1" }}
apiVersion: networking.k8s.io/v1beta1
{{- else }}
apiVersion: extensions/v1beta1
{{- end }}

metadata:
  name: grafana-global
  annotations:
    kubernetes.io/tls-acme: {{ default false .Values.grafana.tls | quote }}
    disco: {{ default false .Values.grafana.disco | quote }}
    disco/zone-name: "global.cloud.sap"
  {{- if .Values.grafana.auth.tls_client_auth.enabled}}
    ingress.kubernetes.io/auth-tls-secret: {{ default "" .Values.grafana.auth.tls_client_auth.secret }}
    ingress.kubernetes.io/auth-tls-verify-depth: "3"
    ingress.kubernetes.io/auth-tls-verify-client: "optional"
  {{- end }}

spec:
  tls:
    - secretName: "tls-{{.Values.grafana.endpoint.host.global | replace "." "-"}}"
      hosts: ["{{.Values.grafana.endpoint.host.global}}"]
  rules:
    - host: "{{.Values.grafana.endpoint.host.global}}"
      http:
        paths:
        - path: /
          backend:
            serviceName: grafana
            servicePort: {{.Values.grafana.endpoint.port.public}}
{{- end }}
{{- end }}
