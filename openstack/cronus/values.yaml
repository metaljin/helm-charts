replicaCount: 1
cronus:
  enabled: true
  cacheSize: 256
  http: 5000
  smtp: 1025
  debug: true
  host: cronus-host
  tls: tls-secret
  image:
    name: cronus-repository
    pullPolicy: IfNotPresent
    tag: latest
    imagePullSecrets: []
nebula:
  enabled: true
  cacheSize: 512
  http: 1080
  debug: true
  host: nebula-host
  image:
    name: nebula-repository
    pullPolicy: IfNotPresent
    tag: latest
    imagePullSecrets: []

config:
  region: eu-de-2
  authUrl: https://identity
  group: service-group
  jiraUsername: jira-username
  jiraPassword: jira-password
  serviceUsername: service-username
  servicePassword: service-password
  applicationCredentialID: application-credential-id
  applicationCredentialSecret: application-credential-secret
  awsAccess: aws-access
  awsSecret: aws-secret
  awsUsername: aws-username
  awsPolicy: aws-policy
  endpointType: public
  forwardUserAgent: false
  billingCacheTTL: 24h
  technicalResponsible: technical-responsible
  accountStatusTimeout: 5m
  accountStatusPollDelay: 10s
  verifyEmailDomain: example.com
  verifyEmailSecret: domainkey
  allowedServices:
    email: email-region

# an existing DNS record to forward disco CNAME records
ingress:
  record: my-ingress.region.cloud.com

service:
  type: ClusterIP

# nginx values
ingress-nginx:
  tcp:
    465: ""
  controller:
    containerPort:
      http: 80
      https: 443
    service:
      ports:
        http: 80
        https: 443
      targetPorts:
        http: http
        https: https
      nodePorts:
        http: ""
        https: ""
        465: ""
    ingressClass: cronus-nginx
    admissionWebhooks:
      enabled: false
    customTemplate:
      configMapName: cronus-nginx-template
      configMapKey: nginx.tmpl
